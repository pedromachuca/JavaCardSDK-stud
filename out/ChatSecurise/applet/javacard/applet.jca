// converted by version 1.3
// on Thu Feb 28 16:19:37 CET 2019

.package applet {
	.aid 0xA0:0x0:0x0:0x0:0x62:0x3:0x1:0xC:0x6;
	.version 1.0;

	.imports {
		0xA0:0x0:0x0:0x0:0x62:0x1:0x1 1.0;		//javacard/framework
		0xA0:0x0:0x0:0x0:0x62:0x2:0x1 1.1;		//javacardx/crypto
		0xA0:0x0:0x0:0x0:0x62:0x1:0x2 1.1;		//javacard/security
		0xA0:0x0:0x0:0x0:0x62:0x0:0x1 1.0;		//java/lang
	}

	.applet {
		0xA0:0x0:0x0:0x0:0x62:0x3:0x1:0xC:0x6:0x1 TheApplet;
	}

	.constantPool {
		// 0
		instanceFieldRef 2.0 TheApplet/privateRSAKey;
		// 1
		instanceFieldRef 2.0 TheApplet/publicRSAKey;
		// 2
		instanceFieldRef 1.1 TheApplet/cRSA_NO_PAD;
		// 3
		instanceFieldRef short TheApplet/cipherRSAKeyLength;
		// 4
		instanceFieldRef 2.0 TheApplet/secretDESKey;
		// 5
		instanceFieldRef boolean TheApplet/keyDES;
		// 6
		instanceFieldRef 1.1 TheApplet/cDES_ECB_NOPAD_enc;
		// 7
		instanceFieldRef 1.1 TheApplet/cDES_ECB_NOPAD_dec;
		// 8
		instanceFieldRef boolean TheApplet/DES_ECB_NOPAD;
		// 9
		staticFieldRef byte[] TheApplet/n;
		// 10
		staticFieldRef byte[] TheApplet/e;
		// 11
		classRef 2.8;		// javacard/security/RSAPrivateKey
		// 12
		staticFieldRef byte[] TheApplet/d;
		// 13
		staticMethodRef 1.1.0(BZ)Ljavacardx/crypto/Cipher;;		// javacardx/crypto/Cipher.getInstance(BZ)Ljavacardx/crypto/Cipher;
			.descriptor	Ljavacardx/crypto/Cipher;	1.1;

		// 14
		virtualMethodRef 0.3.1()V;		// javacard/framework/Applet.register()V
		// 15
		classRef 3.2;		// java/lang/Exception
		// 16
		staticMethodRef TheApplet/initKeyDES()V;
		// 17
		classRef 2.10;		// javacard/security/DESKey
		// 18
		staticFieldRef byte[] TheApplet/theDESKey;
		// 19
		staticMethodRef TheApplet/initDES_ECB_NOPAD()V;
		// 20
		staticMethodRef 0.3.0()V;		// javacard/framework/Applet.<init>()V
		// 21
		staticMethodRef 2.13.0(BSZ)Ljavacard/security/Key;;		// javacard/security/KeyBuilder.buildKey(BSZ)Ljavacard/security/Key;
			.descriptor	Ljavacard/security/Key;	2.0;

		// 22
		virtualMethodRef 1.1.3(Ljavacard/security/Key;B)V;		// javacardx/crypto/Cipher.init(Ljavacard/security/Key;B)V
			.descriptor	Ljavacard/security/Key;	2.0;

		// 23
		classRef 2.9;		// javacard/security/RSAPublicKey
		// 24
		classRef TheApplet;
		// 25
		staticMethodRef TheApplet/<init>()V;
		// 26
		virtualMethodRef 0.3.3()Z;		// javacard/framework/Applet.selectingApplet()Z
		// 27
		virtualMethodRef 0.10.1()[B;		// javacard/framework/APDU.getBuffer()[B
		// 28
		staticMethodRef 0.7.1(S)V;		// javacard/framework/ISOException.throwIt(S)V
		// 29
		virtualMethodRef TheApplet/RSADecrypt(Ljavacard/framework/APDU;)V;
			.descriptor	Ljavacard/framework/APDU;	0.10;

		// 30
		virtualMethodRef TheApplet/getPublicRSAKey(Ljavacard/framework/APDU;)V;
			.descriptor	Ljavacard/framework/APDU;	0.10;

		// 31
		virtualMethodRef TheApplet/cipherGeneric(Ljavacard/framework/APDU;Ljavacardx/crypto/Cipher;S)V;
			.descriptor	Ljavacard/framework/APDU;	0.10;
			.descriptor	Ljavacardx/crypto/Cipher;	1.1;

		// 32
		virtualMethodRef 0.10.6()S;		// javacard/framework/APDU.setIncomingAndReceive()S
		// 33
		virtualMethodRef 1.1.1([BSS[BS)S;		// javacardx/crypto/Cipher.doFinal([BSS[BS)S
		// 34
		virtualMethodRef 0.10.8(SS)V;		// javacard/framework/APDU.setOutgoingAndSend(SS)V
	}

	.class public TheApplet 0 extends 0.3 {		// extends javacard/framework/Applet

		.fields {
			private 1.1 cRSA_NO_PAD 0;		// Ljavacardx/crypto/Cipher;
			private 1.1 cDES_ECB_NOPAD_enc 1;		// Ljavacardx/crypto/Cipher;
			private 1.1 cDES_ECB_NOPAD_dec 2;		// Ljavacardx/crypto/Cipher;
			private 2.16 keyPair 3;		// Ljavacard/security/KeyPair;
			private 2.0 publicRSAKey 4;		// Ljavacard/security/Key;
			private 2.0 privateRSAKey 5;		// Ljavacard/security/Key;
			private 2.0 secretDESKey 6;		// Ljavacard/security/Key;
			private 1.1 cDES_ECB_NOPAD 7;		// Ljavacardx/crypto/Cipher;
			private short cipherRSAKeyLength 8;		// S
			 boolean keyDES 9;		// Z
			 boolean DES_ECB_NOPAD 10;		// Z
			 boolean DES_CBC_NOPAD 11;		// Z
			private static final byte CLA_TEST = -112;		// B
			private static final byte INS_RSA_DECRYPT = -94;		// B
			private static final byte INS_GET_PUBLIC_RSA_KEY = -2;		// B
			private static final byte INS_DES_ECB_NOPAD_ENC = 32;		// B
			private static final byte INS_DES_ECB_NOPAD_DEC = 33;		// B
			static final byte[] theDESKey = {-54,-54,-54,-54,-54,-54,-54,-54};		// [B
			static final byte[] n = {-112,8,21,50,-77,106,32,47,64,-89,-24,2,-84,93,-20,17,29,-6,-16,107,28,-73,-88,57,25,80,-100,68,-19,-87,81,1,15,17,-42,-93,96,-89,126,-107,-94,-6,-32,-115,98,91,-14,98,-94,100,-5,57,-80,-16,111,-94,35,-82,-68,93,-48,26,104,17,-89,-57,27,-38,23,-57,20,-85,37,-110,-65,-52,-127,101,122,8,-112,89,127,-60,-7,67,-100,-86,-66,-28,-8,-5,3,116,61,-5,89,122,86,-93,25,102,67,119,-52,90,-82,33,-11,32,-95,34,-113,60,-33,-46,3,-23,-62,56,-25,-39,56,-17,53,-126,72,-73,-123,16,-108,82,32,-24,-42,-122,-37,97,85,-112,-7,-9,107,102,124,-96,103,-98,-95,72,-96,-35,88,-73,101,-103,-56,25,-52,111,98,-42,91,-100,77,72,69,127,19,-99,-123,18,-113,98,-54,71,67,-59,-32,45,39,120,-73,-61,40,93,73,-17,84,22,57,-51,102,87,34,114,-48,2,120,81,-113,43,-60,82,-97,-97,-12,56,90,-79,-108,-90,-31,111,-16,68,126,-7,-91,-13,-53,33,45,47,-116,-110,95,27,87,-12,92,-2,-63,28,-11,39,37,-67,-19,12,2,90,21,-96,-73,-126,86,36,-73,14,46,-80,-74,110,44,-25,-96,14,-110,-100,-57,-112,-65,74,103,48,-44,106,122,17,56,-23,-108,-65,-108,-87,118,-2,109,-57,70,-20,-30,-9,-87,-67,82,-119};		// [B
			static final byte[] e = {1,0,1};		// [B
			static final byte[] d = {105,-33,103,37,-93,-72,-120,-5,-14,-4,-7,-112,-83,127,68,-67,-72,89,-13,75,-23,10,31,-128,9,89,-75,-28,-3,6,14,-29,70,94,-120,118,3,-32,91,46,71,101,62,-106,-17,12,67,121,-71,-127,-99,33,-27,44,120,2,-87,84,18,102,-85,72,29,-30,110,29,125,-78,-50,122,63,-69,52,-14,70,95,115,124,-70,-8,-63,41,-105,-123,103,-33,-126,-121,-119,97,66,-52,29,-52,3,-50,65,125,-113,37,-63,97,-2,6,79,26,-14,72,85,-40,110,-58,63,109,-31,-50,-87,40,-98,3,45,116,89,28,-37,24,-77,65,22,-18,-33,-111,52,8,-51,8,91,0,-16,125,87,7,116,100,42,112,126,-53,81,34,-78,78,-45,-66,111,-19,76,22,94,44,-120,77,71,102,-83,-49,25,-29,39,-33,75,19,2,-47,84,-23,41,-88,-94,15,3,-88,118,39,-71,-128,54,-57,-27,79,53,-64,-103,-64,33,83,54,-53,-48,-79,-100,-118,95,-86,-127,25,113,-112,125,3,105,-28,25,-89,-36,80,7,8,-11,-7,-77,107,79,-79,46,113,-83,-68,65,26,23,-7,-15,-102,37,-36,-117,-40,-22,90,25,103,24,-83,54,1,-103,76,-123,-73,-43,124,27,-5,49,-62,-42,102,58,-127,89,-41,-79,-36,-125,-13,-35,-80,39,122,83,39,-75,2,123,-20,34,-27,-56,93,-17,-120,112,21,-92,111,-116,-115};		// [B
			static final byte[] inC = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,1};		// [B
			static final byte[] cRSAPublicEncResult = {105,-11,73,-107,-115,-99,5,30,-3,120,-30,-114,-33,42,8,-95,60,107,119,-104,85,24,95,-55,55,-20,7,58,-79,50,25,95,-4,-105,-31,-77,-44,-36,-9,-39,56,-75,122,74,-36,-55,70,123,-37,57,-28,44,99,-70,-103,41,28,96,88,113,91,18,-50,-23,-127,37,124,-118,56,8,-116,57,-48,-95,-4,-65,-73,4,52,108,-109,13,56,60,-55,66,56,110,10,56,116,-60,113,-88,52,96,49,9,-50,-61,-66,-126,105,7,91,-63,-40,99,4,104,22,-73,73,127,-31,-16,106,-21,-94,-127,29,54,-36,-12,2,-19,-77,-11,57,65,96,-12,56,25,-17,107,-58,88,101,73,104,91,-109,58,-31,77,87,105,16,76,-12,-118,19,-124,15,-117,125,-101,118,-78,-51,-80,70,46,-43,74,-80,21,-31,26,-68,83,-8,80,41,-34,-83,-25,-93,121,-59,67,-23,88,56,-17,55,89,74,-24,104,-87,30,41,-1,-67,37,-9,116,-86,-48,45,-36,71,30,96,-28,15,32,-35,90,-3,-14,66,-116,-54,57,-49,-119,51,123,-121,39,28,41,103,38,125,14,-85,-47,106,-102,16,-71,-127,-9,-123,55,-29,-111,23,-103,-59,23,-101,101,-81,101,20,48,66,0,78,-43,100,-3,-85,8,3,72,64,115,-37,25,-25,29,33,25,-118,-46,10,61,-72,-63,43,-21,-109,-96,109,-112,4,59,21,81,-65,-100,99};		// [B
		}

		.publicMethodTable 7 {
			equals(Ljava/lang/Object;)Z;
			register()V;
			register([BSB)V;
			selectingApplet()Z;
			deselect()V;
			getShareableInterfaceObject(Ljavacard/framework/AID;B)Ljavacard/framework/Shareable;;
			select()Z;
			process(Ljavacard/framework/APDU;)V;
		}

		.packageMethodTable 0 {
			cipherGeneric(Ljavacard/framework/APDU;Ljavacardx/crypto/Cipher;S)V;
			RSADecrypt(Ljavacard/framework/APDU;)V;
			getPublicRSAKey(Ljavacard/framework/APDU;)V;
		}

		.method protected <init>()V 0 {
			.stack 5;
			.locals 0;

				L0:	aload_0;
					invokespecial 20;		// javacard/framework/Applet.<init>()V
					aload_0;
					invokespecial 16;		// applet/TheApplet.initKeyDES()V
					aload_0;
					invokespecial 19;		// applet/TheApplet.initDES_ECB_NOPAD()V
					aload_0;
					aload_0;
					aconst_null;
					dup_x 18;
					putfield_a 0;		// reference applet/TheApplet.privateRSAKey
					putfield_a 1;		// reference applet/TheApplet.publicRSAKey
					aload_0;
					aconst_null;
					putfield_a 2;		// reference applet/TheApplet.cRSA_NO_PAD
					aload_0;
					sspush 1024;
					putfield_s 3;		// short applet/TheApplet.cipherRSAKeyLength
					aload_0;
					sconst_4;
					getfield_s_this 3;		// short applet/TheApplet.cipherRSAKeyLength
					sconst_1;
					invokestatic 21;		// javacard/security/KeyBuilder.buildKey(BSZ)Ljavacard/security/Key;
					putfield_a 1;		// reference applet/TheApplet.publicRSAKey
					aload_0;
					sconst_5;
					getfield_s_this 3;		// short applet/TheApplet.cipherRSAKeyLength
					sconst_0;
					invokestatic 21;		// javacard/security/KeyBuilder.buildKey(BSZ)Ljavacard/security/Key;
					putfield_a 0;		// reference applet/TheApplet.privateRSAKey
					getfield_a_this 1;		// reference applet/TheApplet.publicRSAKey
					checkcast 0 23;		// T_CLASSORINTERFACE javacard/security/RSAPublicKey
					getstatic_a 9;		// reference applet/TheApplet.n
					sconst_0;
					getfield_s_this 3;		// short applet/TheApplet.cipherRSAKeyLength
					bspush 8;
					sdiv;
					invokeinterface 4 23 7;		// javacard/security/RSAPublicKey
					getfield_a_this 1;		// reference applet/TheApplet.publicRSAKey
					checkcast 0 23;		// T_CLASSORINTERFACE javacard/security/RSAPublicKey
					getstatic_a 10;		// reference applet/TheApplet.e
					sconst_0;
					getstatic_a 10;		// reference applet/TheApplet.e
					arraylength;
					invokeinterface 4 23 6;		// javacard/security/RSAPublicKey
					getfield_a_this 0;		// reference applet/TheApplet.privateRSAKey
					checkcast 0 11;		// T_CLASSORINTERFACE javacard/security/RSAPrivateKey
					getstatic_a 9;		// reference applet/TheApplet.n
					sconst_0;
					getfield_s_this 3;		// short applet/TheApplet.cipherRSAKeyLength
					bspush 8;
					sdiv;
					invokeinterface 4 11 7;		// javacard/security/RSAPrivateKey
					getfield_a_this 0;		// reference applet/TheApplet.privateRSAKey
					checkcast 0 11;		// T_CLASSORINTERFACE javacard/security/RSAPrivateKey
					getstatic_a 12;		// reference applet/TheApplet.d
					sconst_0;
					getfield_s_this 3;		// short applet/TheApplet.cipherRSAKeyLength
					bspush 8;
					sdiv;
					invokeinterface 4 11 6;		// javacard/security/RSAPrivateKey
					aload_0;
					bspush 12;
					sconst_0;
					invokestatic 13;		// javacardx/crypto/Cipher.getInstance(BZ)Ljavacardx/crypto/Cipher;
					putfield_a 2;		// reference applet/TheApplet.cRSA_NO_PAD
					aload_0;
					invokevirtual 14;		// javacard/framework/Applet.register()V
					return;
		}

		.method private initKeyDES()V {
			.stack 4;
			.locals 1;

				L0:	aload_0;
					sconst_3;
					bspush 64;
					sconst_0;
					invokestatic 21;		// javacard/security/KeyBuilder.buildKey(BSZ)Ljavacard/security/Key;
					putfield_a 4;		// reference applet/TheApplet.secretDESKey
					getfield_a_this 4;		// reference applet/TheApplet.secretDESKey
					checkcast 0 17;		// T_CLASSORINTERFACE javacard/security/DESKey
					getstatic_a 18;		// reference applet/TheApplet.theDESKey
					sconst_0;
					invokeinterface 3 17 5;		// javacard/security/DESKey
					aload_0;
					sconst_1;
					putfield_b 5;		// boolean applet/TheApplet.keyDES
				L1:	goto L3;
				L2:	astore_1;
					aload_0;
					sconst_0;
					putfield_b 5;		// boolean applet/TheApplet.keyDES
				L3:	return;
			.exceptionTable {
				// start_block end_block handler_block catch_type_index
				L0 L1 L2 15;
			}
		}

		.method private initDES_ECB_NOPAD()V {
			.stack 3;
			.locals 1;

				L0:	getfield_b_this 5;		// boolean applet/TheApplet.keyDES
					ifeq L4;
				L1:	aload_0;
					sconst_5;
					sconst_0;
					invokestatic 13;		// javacardx/crypto/Cipher.getInstance(BZ)Ljavacardx/crypto/Cipher;
					putfield_a 6;		// reference applet/TheApplet.cDES_ECB_NOPAD_enc
					aload_0;
					sconst_5;
					sconst_0;
					invokestatic 13;		// javacardx/crypto/Cipher.getInstance(BZ)Ljavacardx/crypto/Cipher;
					putfield_a 7;		// reference applet/TheApplet.cDES_ECB_NOPAD_dec
					getfield_a_this 6;		// reference applet/TheApplet.cDES_ECB_NOPAD_enc
					getfield_a_this 4;		// reference applet/TheApplet.secretDESKey
					sconst_2;
					invokevirtual 22;		// javacardx/crypto/Cipher.init(Ljavacard/security/Key;B)V
					getfield_a_this 7;		// reference applet/TheApplet.cDES_ECB_NOPAD_dec
					getfield_a_this 4;		// reference applet/TheApplet.secretDESKey
					sconst_1;
					invokevirtual 22;		// javacardx/crypto/Cipher.init(Ljavacard/security/Key;B)V
					aload_0;
					sconst_1;
					putfield_b 8;		// boolean applet/TheApplet.DES_ECB_NOPAD
				L2:	goto L4;
				L3:	astore_1;
					aload_0;
					sconst_0;
					putfield_b 8;		// boolean applet/TheApplet.DES_ECB_NOPAD
				L4:	return;
			.exceptionTable {
				// start_block end_block handler_block catch_type_index
				L1 L2 L3 15;
			}
		}

		.method public static install([BSB)V 1 {
			.stack 2;
			.locals 0;

				L0:	new 24;		// applet/TheApplet
					dup;
					invokespecial 25;		// applet/TheApplet.<init>()V
					pop;
					return;
		}

		.method public process(Ljavacard/framework/APDU;)V 7 {
			.stack 4;
			.locals 1;

			.descriptor	Ljavacard/framework/APDU;	0.10;

				L0:	aload_0;
					invokevirtual 26;		// javacard/framework/Applet.selectingApplet()Z
					ifeq L2;
				L1:	return;
				L2:	aload_1;
					invokevirtual 27;		// javacard/framework/APDU.getBuffer()[B
					astore_2;
					aload_2;
					sconst_0;
					baload;
					bspush -112;
					if_scmpeq L4;
				L3:	sspush 28160;
					invokestatic 28;		// javacard/framework/ISOException.throwIt(S)V
				L4:	aload_2;
					sconst_1;
					baload;
					slookupswitch L11 4 -94 L5 -2 L6 32 L7 33 L9;
				L5:	aload_0;
					aload_1;
					invokevirtual 29;		// applet/TheApplet.RSADecrypt(Ljavacard/framework/APDU;)V
					goto L12;
				L6:	aload_0;
					aload_1;
					invokevirtual 30;		// applet/TheApplet.getPublicRSAKey(Ljavacard/framework/APDU;)V
					goto L12;
				L7:	getfield_b_this 8;		// boolean applet/TheApplet.DES_ECB_NOPAD
					ifeq L12;
				L8:	aload_0;
					aload_1;
					getfield_a_this 6;		// reference applet/TheApplet.cDES_ECB_NOPAD_enc
					bspush 64;
					invokevirtual 31;		// applet/TheApplet.cipherGeneric(Ljavacard/framework/APDU;Ljavacardx/crypto/Cipher;S)V
					goto L12;
				L9:	getfield_b_this 8;		// boolean applet/TheApplet.DES_ECB_NOPAD
					ifeq L12;
				L10:	aload_0;
					aload_1;
					getfield_a_this 7;		// reference applet/TheApplet.cDES_ECB_NOPAD_dec
					bspush 64;
					invokevirtual 31;		// applet/TheApplet.cipherGeneric(Ljavacard/framework/APDU;Ljavacardx/crypto/Cipher;S)V
					goto L12;
				L11:	sspush 27265;
					invokestatic 28;		// javacard/framework/ISOException.throwIt(S)V
				L12:	return;
		}

		.method  cipherGeneric(Ljavacard/framework/APDU;Ljavacardx/crypto/Cipher;S)V 128 {
			.stack 6;
			.locals 1;

			.descriptor	Ljavacard/framework/APDU;	0.10;
			.descriptor	Ljavacardx/crypto/Cipher;	1.1;

				L0:	aload_1;
					invokevirtual 32;		// javacard/framework/APDU.setIncomingAndReceive()S
					pop;
					aload_1;
					invokevirtual 27;		// javacard/framework/APDU.getBuffer()[B
					astore 4;
					aload_2;
					aload 4;
					sconst_5;
					aload 4;
					sconst_4;
					baload;
					aload 4;
					sconst_5;
					invokevirtual 33;		// javacardx/crypto/Cipher.doFinal([BSS[BS)S
					pop;
					aload_1;
					sconst_5;
					aload 4;
					sconst_4;
					baload;
					invokevirtual 34;		// javacard/framework/APDU.setOutgoingAndSend(SS)V
					return;
		}

		.method  RSADecrypt(Ljavacard/framework/APDU;)V 129 {
			.stack 6;
			.locals 2;

			.descriptor	Ljavacard/framework/APDU;	0.10;

				L0:	aload_1;
					invokevirtual 32;		// javacard/framework/APDU.setIncomingAndReceive()S
					pop;
					aload_1;
					invokevirtual 27;		// javacard/framework/APDU.getBuffer()[B
					astore_2;
					getfield_a_this 2;		// reference applet/TheApplet.cRSA_NO_PAD
					getfield_a_this 0;		// reference applet/TheApplet.privateRSAKey
					sconst_1;
					invokevirtual 22;		// javacardx/crypto/Cipher.init(Ljavacard/security/Key;B)V
					sspush 128;
					sstore_3;
					getfield_a_this 2;		// reference applet/TheApplet.cRSA_NO_PAD
					aload_2;
					sconst_5;
					sload_3;
					aload_2;
					sconst_0;
					invokevirtual 33;		// javacardx/crypto/Cipher.doFinal([BSS[BS)S
					pop;
					aload_1;
					sconst_0;
					sload_3;
					invokevirtual 34;		// javacard/framework/APDU.setOutgoingAndSend(SS)V
					return;
		}

		.method  getPublicRSAKey(Ljavacard/framework/APDU;)V 130 {
			.stack 5;
			.locals 2;

			.descriptor	Ljavacard/framework/APDU;	0.10;

				L0:	aload_1;
					invokevirtual 27;		// javacard/framework/APDU.getBuffer()[B
					astore_2;
					aload_2;
					sconst_3;
					baload;
					sspush 255;
					sand;
					s2b;
					sstore_3;
					sload_3;
					ifeq L3;
				L1:	sload_3;
					sconst_1;
					if_scmpeq L3;
				L2:	sspush 27270;
					invokestatic 28;		// javacard/framework/ISOException.throwIt(S)V
				L3:	sload_3;
					ifne L5;
				L4:	aload_2;
					sconst_0;
					getfield_a_this 1;		// reference applet/TheApplet.publicRSAKey
					checkcast 0 23;		// T_CLASSORINTERFACE javacard/security/RSAPublicKey
					aload_2;
					sconst_1;
					invokeinterface 3 23 5;		// javacard/security/RSAPublicKey
					s2b;
					bastore;
					goto L6;
				L5:	aload_2;
					sconst_0;
					getfield_a_this 1;		// reference applet/TheApplet.publicRSAKey
					checkcast 0 23;		// T_CLASSORINTERFACE javacard/security/RSAPublicKey
					aload_2;
					sconst_1;
					invokeinterface 3 23 4;		// javacard/security/RSAPublicKey
					s2b;
					bastore;
				L6:	aload_1;
					sconst_0;
					aload_2;
					sconst_0;
					baload;
					sspush 255;
					sand;
					sconst_1;
					sadd;
					invokevirtual 34;		// javacard/framework/APDU.setOutgoingAndSend(SS)V
					return;
		}

	}

}
